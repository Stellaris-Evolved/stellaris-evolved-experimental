ap_synthetic_age = {				# (machine) Mechanical Tier I
    # BASE - Allows branching
    potential = {
        has_synthetic_dawn = yes
        OR = {
            is_individual_machine = yes
            is_machine_empire = yes
        }

        tec_has_main_ascension_path = no
        tec_has_secondary_ascension_path = no
    }
    possible = {
        custom_tooltip = {
            fail_text = "requires_ascension_perks_2"
            num_ascension_perks > 1
        }
        custom_tooltip = {
            fail_text = "tec_ap_require_tech_colonial_centralization"
            has_technology = tech_colonial_centralization
        }
        #custom_tooltip = {
        #	fail_text = "requires_free_tradition_tree"
        #	num_tradition_categories < @tec_max_tradition_slots
        #}
    }
    on_enabled = {
        custom_tooltip = "tec_ap_synthetic_age_tooltip"
        hidden_effect = {
            # Global Controller
            event_target:global_event_country = {
                change_variable = {
                    which = tec_number_of_technoascended_empires
                    value = 1
                }
            }
            # /
            # Effects
            if = {
                limit = {
                    has_country_flag = tec_advanced_ascension
                }
                tec_give_machine_cyb_t1_ap_effect = yes
            }
            else = {
                country_event = {
                    id = tec_machine_path.100
                }
            }
            # /
        }
        if = {	# Pre-steps - robomodding
            limit = {
                NOT = {
                    has_technology = tech_robomodding_m
                }
            }
            custom_tooltip = "tec_ap_provides_tech_robomodding_m"
            hidden_effect = {
                add_research_option = tech_robomodding_m
            }
        }
        custom_tooltip = tec_ap_unlock_synthetics_tradition
        if = {	# Notify Lacking Tech
            limit = {
                NOT = {
                    has_technology = tech_robomodding_m
                }
            }
            custom_tooltip = tec_ap_synthetic_age_stopped
        }

        custom_tooltip = ap_synthetic_age_steps
    }
    #modifier = {
    #MACHINE_species_trait_points_add = 2
    #modify_species_cost_mult = -0.25
    #}
    ai_weight = {
        factor = @tec_force_path_ap_weight
    }
    # /
    tradition_swap = {	# mechanical
        name = ap_synthetic_age_mechanical
        inherit_effects = no
        inherit_icon = no
        inherit_name = no
        trigger = {	# TODO ASCENSION
            has_country_flag = ap_synthetic_age_mechanical
        }
        on_enabled = {
            custom_tooltip = "ap_synthetic_age_mechanical_tooltip"
            custom_tooltip = "ap_synthetic_age_mechanical_tradition"
        }
        weight = {
            factor = @tec_force_ap_swap_weight
        }
    }
    tradition_swap = {	# Digital
        name = ap_synthetic_age_digital
        inherit_effects = no
        inherit_icon = no
        inherit_name = no
        trigger = {	# TODO ASCENSION
            has_country_flag = ap_synthetic_age_digital
        }
        on_enabled = {
            custom_tooltip = "ap_synthetic_age_digital_tooltip"
            custom_tooltip = "ap_synthetic_age_digital_tradition"
        }
        weight = {
            factor = @tec_force_ap_swap_weight
        }
    }

    tradition_swap = {
        inherit_name = yes
        inherit_effects = no
        inherit_icon = yes
        trigger = {
            has_machine_age_dlc = yes
        }
        custom_tooltip = "synthetic_age_tooltip_machine_age"
        on_enabled = {
            hidden_effect = {
                country_event = { id = machine_age.4000 }
            }
        }

        weight = {
            factor = 1
        }
    }
}